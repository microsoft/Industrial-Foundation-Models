{
    "basic_info": {
        "row_num": 649,
        "col_num": 33,
        "label_candidates": [
            "G3",
            "G2",
            "G1"
        ],
        "valid_feature_num": 33,
        "num_features": [
            "age",
            "Medu",
            "Fedu",
            "traveltime",
            "studytime",
            "failures",
            "famrel",
            "freetime",
            "goout",
            "Dalc",
            "Walc",
            "health",
            "absences",
            "G1",
            "G2",
            "G3"
        ],
        "cat_features": [
            "school",
            "sex",
            "address",
            "famsize",
            "Pstatus",
            "Mjob",
            "Fjob",
            "reason",
            "guardian",
            "schoolsup",
            "famsup",
            "paid",
            "activities",
            "nursery",
            "higher",
            "internet",
            "romantic"
        ],
        "other_features": [],
        "tags": [
            "education",
            "standardized testing"
        ],
        "source_url": "https://www.kaggle.com/datasets/larsen0966/student-performance-data-set"
    },
    "feature_info": {
        "school": {
            "description": "Student's school (GP - Gabriel Pereira or MS - Mousinho da Silveira)",
            "type": "categorical",
            "value_dict": {
                "GP": "Gabriel Pereira",
                "MS": "Mousinho da Silveira"
            }
        },
        "sex": {
            "description": "Student's sex (F - female or M - male)",
            "type": "categorical",
            "value_dict": {
                "F": "Female",
                "M": "Male"
            }
        },
        "age": {
            "description": "Student's age (from 15 to 22)",
            "type": "numerical",
            "decimal": 0
        },
        "address": {
            "description": "Student's home address type (U - urban or R - rural)",
            "type": "categorical",
            "value_dict": {
                "U": "Urban",
                "R": "Rural"
            }
        },
        "famsize": {
            "description": "Family size (LE3 - less or equal to 3 or GT3 - greater than 3)",
            "type": "categorical",
            "value_dict": {
                "GT3": "Greater than 3",
                "LE3": "Less or equal to 3"
            }
        },
        "Pstatus": {
            "description": "Parent's cohabitation status (T - living together or A - apart)",
            "type": "categorical",
            "value_dict": {
                "A": "Apart",
                "T": "Living together"
            }
        },
        "Medu": {
            "description": "Mother's education (0 - none, 1 - primary education (4th grade), 2 \u2013 5th to 9th grade, 3 \u2013 secondary education or 4 \u2013 higher education)",
            "type": "numerical",
            "decimal": 0
        },
        "Fedu": {
            "description": "Father's education (0 - none, 1 - primary education (4th grade), 2 \u2013 5th to 9th grade, 3 \u2013 secondary education or 4 \u2013 higher education)",
            "type": "numerical",
            "decimal": 0
        },
        "Mjob": {
            "description": "Mother's job (teacher, health care related, civil services, at_home or other)",
            "type": "categorical",
            "value_dict": {
                "at_home": "At home",
                "health": "Health care related",
                "other": "Other",
                "services": "Civil services",
                "teacher": "Teacher"
            }
        },
        "Fjob": {
            "description": "Father's job (teacher, health care related, civil services, at_home or other)",
            "type": "categorical",
            "value_dict": {
                "teacher": "Teacher",
                "other": "Other",
                "services": "Civil services",
                "health": "Health care related",
                "at_home": "At home"
            }
        },
        "reason": {
            "description": "Reason to choose this school (close to home, school reputation, course preference or other)",
            "type": "categorical",
            "value_dict": {
                "course": "Course preference",
                "other": "Other",
                "home": "Close to home",
                "reputation": "School reputation"
            }
        },
        "guardian": {
            "description": "Student's guardian (mother, father or other)",
            "type": "categorical",
            "value_dict": {
                "mother": "Mother",
                "father": "Father",
                "other": "Other"
            }
        },
        "traveltime": {
            "description": "Home to school travel time (1 - <15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - >1 hour)",
            "type": "numerical",
            "decimal": 0
        },
        "studytime": {
            "description": "Weekly study time (1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours)",
            "type": "numerical",
            "decimal": 0
        },
        "failures": {
            "description": "Number of past class failures (n if 1<=n<3, else 4)",
            "type": "numerical",
            "decimal": 0
        },
        "schoolsup": {
            "description": "Extra educational support (yes or no)",
            "type": "categorical",
            "value_dict": {
                "yes": "Yes",
                "no": "No"
            }
        },
        "famsup": {
            "description": "Family educational support (yes or no)",
            "type": "categorical",
            "value_dict": {
                "no": "No",
                "yes": "Yes"
            }
        },
        "paid": {
            "description": "Extra paid classes within the course subject (Math or Portuguese) (yes or no)",
            "type": "categorical",
            "value_dict": {
                "no": "No",
                "yes": "Yes"
            }
        },
        "activities": {
            "description": "Extra-curricular activities (yes or no)",
            "type": "categorical",
            "value_dict": {
                "no": "No",
                "yes": "Yes"
            }
        },
        "nursery": {
            "description": "Attended nursery school (yes or no)",
            "type": "categorical",
            "value_dict": {
                "yes": "Yes",
                "no": "No"
            }
        },
        "higher": {
            "description": "Wants to take higher education (yes or no)",
            "type": "categorical",
            "value_dict": {
                "yes": "Yes",
                "no": "No"
            }
        },
        "internet": {
            "description": "Internet access at home (yes or no)",
            "type": "categorical",
            "value_dict": {
                "no": "No",
                "yes": "Yes"
            }
        },
        "romantic": {
            "description": "In a romantic relationship (yes or no)",
            "type": "categorical",
            "value_dict": {
                "no": "No",
                "yes": "Yes"
            }
        },
        "famrel": {
            "description": "Quality of family relationships (from 1 - very bad to 5 - excellent)",
            "type": "numerical",
            "decimal": 0
        },
        "freetime": {
            "description": "Free time after school (from 1 - very low to 5 - very high)",
            "type": "numerical",
            "decimal": 0
        },
        "goout": {
            "description": "Going out with friends (from 1 - very low to 5 - very high)",
            "type": "numerical",
            "decimal": 0
        },
        "Dalc": {
            "description": "Workday alcohol consumption (from 1 - very low to 5 - very high)",
            "type": "numerical",
            "decimal": 0
        },
        "Walc": {
            "description": "Weekend alcohol consumption (from 1 - very low to 5 - very high)",
            "type": "numerical",
            "decimal": 0
        },
        "health": {
            "description": "Current health status (from 1 - very bad to 5 - very good)",
            "type": "numerical",
            "decimal": 0
        },
        "absences": {
            "description": "Number of school absences (from 0 to 93)",
            "type": "numerical",
            "decimal": 0
        },
        "G1": {
            "description": "First period grade (from 0 to 20)",
            "type": "numerical",
            "decimal": 0
        },
        "G2": {
            "description": "Second period grade (from 0 to 20)",
            "type": "numerical",
            "decimal": 0
        },
        "G3": {
            "description": "Final grade (from 0 to 20, output target)",
            "type": "numerical",
            "decimal": 0
        }
    },
    "task_info": {
        "G3": {
            "task_type": "regression",
            "prompt": {
                "role_prompt": "You are an expert in student performance prediction.",
                "task_prompt": "Based on the features of the student, please predict the final grade (G3) of the student.",
                "answer_prompt": "The final grade (G3) of the student is expected to be __."
            }
        },
        "G2": {
            "task_type": "regression",
            "prompt": {
                "role_prompt": "You are an expert in student performance prediction.",
                "task_prompt": "Based on the features of the student, please predict the second period grade (G2) of the student.",
                "answer_prompt": "The second period grade (G2) of the student is expected to be __."
            }
        },
        "G1": {
            "task_type": "regression",
            "prompt": {
                "role_prompt": "You are an expert in student performance prediction.",
                "task_prompt": "Based on the features of the student, please predict the first period grade (G1) of the student.",
                "answer_prompt": "The first period grade (G1) of the student is expected to be __."
            }
        }
    }
}